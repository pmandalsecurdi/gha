name: Terraform Okta Integration

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., dev, prod)'
        required: true
        default: 'dev'

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Export environment secrets
        run: |
          echo "TF_VAR_okta_api_token=${{ secrets.OKTA_API_TOKEN }}" >> $GITHUB_ENV
          echo "TF_VAR_okta_org_name=${{ secrets.OKTA_ORG_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_okta_base_url=${{ secrets.OKTA_BASE_URL }}" >> $GITHUB_ENV

      - name: Ensure output folder and placeholder
        run: |
          mkdir -p output
          echo "No apps yet" > output/placeholder.txt

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve

      - name: Backup State to External Repo
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          git clone https://x-access-token:${{ secrets.STATE_REPO_PAT }}@github.com/YOUR_USERNAME/terraform-state-backup.git state-repo
          mkdir -p state-repo/${{ github.event.inputs.environment }}
          cp terraform.tfstate .terraform.lock.hcl state-repo/${{ github.event.inputs.environment }}/
          cd state-repo
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Backup state for ${{ github.event.inputs.environment }} at $(date -u)" || echo "No changes"
          git push

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: okta-app-logs
          path: output/
