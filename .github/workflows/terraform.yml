name: Terraform Okta Integration

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., dev, prod)'
        required: true
        default: 'dev'

jobs:
  terraform:
    name: Terraform Workflow with External State
    runs-on: ubuntu-latest

    env:
      TF_VAR_okta_api_token: ${{ secrets.IAM_APP_ONBOARD_TF_DEV }}
      TF_VAR_okta_org_name: ${{ secrets.OKTA_ORG_NAME }}
      TF_VAR_okta_base_url: ${{ secrets.OKTA_BASE_URL }}

    steps:
      - name: Checkout Main Repo
        uses: actions/checkout@v4

      - name: Clone Terraform State Repo
        run: |
          ENV_NAME=${{ github.event.inputs.environment }}
          git clone https://x-access-token:${{ secrets.passme }}@github.com/${{ github.repository_owner }}/IAMTerraform_OKTA_state.git state-repo
          mkdir -p state-repo/$ENV_NAME
          cp -f state-repo/$ENV_NAME/terraform.tfstate terraform.tfstate || echo "No previous terraform.tfstate found"
          cp -f state-repo/$ENV_NAME/.terraform.lock.hcl .terraform.lock.hcl || echo "No previous lock file found"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Backup Updated State to External Repo
        run: |
          ENV_NAME=${{ github.event.inputs.environment }}
          cp -f terraform.tfstate .terraform.lock.hcl state-repo/$ENV_NAME/
          cd state-repo
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Backup state for $ENV_NAME at $(date -u)" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.passme }}@github.com/${{ github.repository_owner }}/IAMTerraform_OKTA_state.git HEAD:main
